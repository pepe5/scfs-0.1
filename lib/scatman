#!/bin/bash
function find_cats \
    { mount | perl -ne 'm{^/.* on (.*) type } and print "$1\n"' | while read FS; do
        cd $FS; ls -1dht `pwd`/*@*[0-9].sqlite | head -1
    done; }


# IN/s: < [[find_cats]]
function list_sdups \
    { while read CAT; do 
        sqlite3 "$CAT" "
            SELECT ix FROM find_printf f
            CROSS JOIN (SELECT s, count(s) as scnt FROM find_printf WHERE s <> 0 GROUP BY s) sc ON sc.s = f.s
            CROSS JOIN (SELECT fn, count(fn) as ncnt FROM find_printf GROUP BY fn) nc ON nc.fn = f.fn
            ORDER BY scnt DESC, f.fn
            LIMIT 100" \
          | awk -v CAT=$CAT '{print $0,CAT}';
        done; }

function tun_cat \
    { while read CAT; do
        case $1 in
            (--ix1 | *) echo '' -tun_cat: 'indexing i,s,mt,dir, & fn..' 1>&2
                sqlite3 "$CAT" <<-EOF
                    CREATE INDEX "find_printf_inode" ON find_printf (inode ASC);
                    CREATE INDEX "find_printf_s" ON find_printf (s ASC);
                    CREATE INDEX "find_printf_mtime" ON find_printf (mtime ASC);
                    CREATE INDEX "find_printf_dir" ON find_printf (dir ASC);
                    CREATE INDEX "find_printf_fn" ON find_printf (fn ASC);
                    EOF
                ls -ldht "$CAT" # `pwd`/*@*.sqlite* `pwd`/$F.sqlite | sort -t@ -k2r -u
                ;;
        esac
        done; }

# list last file/'s rec. candidates:
# IN/s: < [[list_sdups]]
# EG/s: find_cats | list_sdups | list_last_FCs
function list_last_FCs \
    { while read IX CAT; do
        LASTC=$(sqlite3 "$CAT" "
            SELECT inode,du,'-',lns,'-','-',s,mtime,dir,fn
            FROM find_printf f
            WHERE dir = (SELECT dir FROM find_printf WHERE ix=$IX)
            AND fn = (SELECT fn FROM find_printf WHERE ix=$IX)
            ORDER BY dt DESC
            LIMIT 1"\
          | perl -nle '
            @A=split /\|/;
            print join (" ",@A[0..$#A-1])."$A[$#A]"')
        S=`echo $LASTC | cut -d\  -f7`
        P=`echo $LASTC | cut -d\  -f10-`
        F=${P##*/}
        if [[ 0 != `echo $LASTC | wc -w` ]]
        then
            LASTF=$(find 2>&1 "`dirname $CAT`/$P" \
                -type f \
                -printf "%i %k - %n - - %s %TY-%Tm-%Td %TH:%TM:%TS %h/%f\n" \
                | perl -pe 's/([\d-]+\s+[\d:]+)\.\d+/$1/')
            if [[ "`echo $LASTC | cut -d\  -f-9`" != "`echo $LASTF | cut -d\  -f-9`" ]];
            then
                echo
                echo $IX $CAT: '<>' # -S: $S -F:$F
                echo ' <-'$LASTC
                echo ' ->'$LASTF
            else echo -n .
            fi
        fi
        done; }

##
# original version:
# !/usr/bin/python
# Usage: %s add <CDMountPoint> <CDLabel> <dbfile>
#        %s del <CDLabel> <dbfile>
#        %s help
# ''' % (sys.argv[0],sys.argv[0],sys.argv[0])
