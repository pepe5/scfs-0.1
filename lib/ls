#!/bin/bash

# wrapper fallback
if [[ $@ =~ ^--sc|\ --sc\ |--sc$ ]]
then true
    # echo '' --sc: implies -l --time-style=long-iso .. 1>&2
    # -dils is not matching dired defaults
else exec /bin/ls $*
fi

# remove -l from switches
# separate switches OPTS & files-specs ARGS
O=''; A=''; for A1 in $*
do
    case $A1 in
        (--sc) ;;
        (--group=fn) GROUP=fn;;
        (--*) O="$O $A1";;
        (-*) O="$O `echo $A1 | sed -e 's/l//g'`";;
        (*) A="$A $A1";;
    esac
done
# echo '' -O:$O -A: $A 1>&2

# we need to track dir/s from $A/s
#>? lets have only 1 arg in $A for now
if [[ $A =~ [^[:space:]]+ ]];
then A=${A## }
else A=.
fi

# foreach file-spec/*, list CAT/s rec/s
/bin/ls -1 $O $A | while read F
do
    S=${F##*/}
    /bin/ls -dl --time-style=long-iso "$A/$F"
        #>! try if prepending fn by ../ would help dired to handle directories
        # echo $S: # '' -$S: 1>&2
        # ..
        # | perl -nle '
        #   @A=split / /
        #   print join (" ",@A[0..6]).qq{ ../}.join (" ",@A[7..$#A])'
    if ! [[ -d $F ]]
    then        
        mount | perl -ne 'm{^/.* on (.*) type } and print "$1\n"' | while read FS
        do
            cd $FS 2>/dev/null
            export CAT=`ls -1t *@*.sqlite | head -1`
            sqlite3 $CAT "
                      SELECT perms,lns,ug,s,mtime,dir,fn
                      FROM find_printf
                      WHERE fn = '$S'
                      LIMIT 10" \
                  | perl -nle '
                      @A=split /\|/;
                      $ENV{"CAT"} =~ /(.*)@([^.,]+)[.,]/;
                      print join (" ",@A[0..1]).qq{ $1 $2 }.join (" ",@A[3..$#A-1])."$A[$#A]"'
        done
        if [[ $GROUP = fn ]]; then echo; fi
    fi
done
